---
import { icsCalendarToObject } from "ts-ics";
import invariant from "tiny-invariant";
import { format, intervalToDuration } from 'date-fns';

const icsUrl = "https://calendar.google.com/calendar/ical/stephenchislett%40gmail.com/public/basic.ics";

const ics = await fetch(icsUrl);
const icsString = await ics.text();
const calendar = icsCalendarToObject(icsString);
const rawEvents = calendar.events;

invariant(rawEvents, "No events found");

const events = rawEvents.map(event => {
	const start = new Date(event.start.date);
	const end = event.end ? new Date(event.end.date) : null;
	const formattedStart = format(start, 'MMMM do, yyyy h:mm a');
	const formattedEnd = end ? format(end, 'h:mm a') : null;
	const lengthInHours = end ? intervalToDuration({ start, end }).hours : null;

	let dateString = formattedStart;
	if (formattedEnd) {
		dateString += ` to ${formattedEnd}`;
	}
	if (lengthInHours) {
		dateString += ` (${lengthInHours} hours)`;
	}

	return {
		date: dateString,
		description: event.description,
		summary: event.summary,
		lastModified: event.lastModified,
		attachments: event.attach,
		location: event.location,
	}
});


---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>nl-events</title>
		<style>
			@import url('https://rsms.me/inter/inter.css');

			body {
				font-family: 'Inter', sans-serif;
				background-color: white;
				margin: 0;
				padding: 0;
			}

			h1 {
				font-weight: 700;
				text-align: center;
			}
		</style>
	</head>
	<body>
		<h1>nl-events</h1>
		<ul>
			{events.map(event => (
				<li>
					<h2>{event.summary}</h2>
					<p>{event.date}</p>
					{event.attachments && (
						<p>
							<a href={event.attachments} target="_blank" rel="noopener noreferrer">
								View Attachment
							</a>
						</p>
					)}
				</li>
			))}
		</ul>
	</body>
</html>
